#!/usr/bin/env node

var https = require("https");
var unirest = require('unirest');
var fs = require('fs');

var accessToken = ""; //TODO
var raidFolderID;
var raidFolderName = "CloudRaid";
var apiPath = 'https://api.box.com';


function createHeader(args) {
    var header = { 'Authorization' : 'Bearer ' + accessToken };

    for(var key in args) {
        header[key] = args[key];
    }

    return header;
}

function getRootFolders(fn) {
    getFolderContent(0, function(items) {
        if(items) {
            fn(items.filter(function(item) {return item.type === 'folder';}));
        } else {
            fn(null);
        }
    })
}

function getFolderContent(folderId, fn) {
    unirest.get(apiPath + '/2.0/folders/' + folderId + '/items')
           .headers(createHeader())
           .end(function (response) {
               fn(response.status === 200 ? response.body.entries : null);
           });
}

function createFolder(args, fn) {
    var folderId = 0;

    var parent = (args.parent ? args.parent : 0);
    var data = JSON.stringify({name: args.folderName, parent: {id: parent}});

    unirest.post(apiPath + '/2.0/folders')
        .headers(createHeader({
                   'Content-Type': 'application/json',
                   'Content-Length': data.length }))
        .send(data)
        .end(function (response) {
            switch(response.status) {
                case 201:
                    console.log("Successfully created folder '"+args.folderName + "'. ID: "+response.body.id);
                    fn(response.body.id);
                    break;
                case 409:
                    console.log("Folder '" + args.folderName + "' already exists in this directory");
                    fn(response.body.context_info.conflicts[0].id);
                    break;
                default:
                    console.log("Unable to create folder. Error " + response.status)
                    fn(null);
            }
        });
}

function getOrCreateRaidFolder(raidFolderName, fn) {
    getRootFolders(function(items) {
        if(raidFolderID) {
            fn(raidFolderID);
        }

        items.forEach(function(item) {
            if(item.name === raidFolderName) {
                raidFolderID = item.id;
                console.log("returning folder");
                return fn(item.id);
            }
        });

        if(!raidFolderID) {
            console.log("creating folder");
            createFolder({folderName: raidFolderName}, function(folderId) {
                raidFolderId = folderId;
                fn(folderId);
            });
        }
    });
}



function uploadFile(folderId, filename, data, fn) {
    var filePath = ""; //TODO

    unirest.post('https://upload.box.com/api/2.0/files/content')
           .headers(createHeader())
           .field('attributes', JSON.stringify({name: 'asd.txt', parent: {id: folderId}}))
           .attach('file', filePath)
           .end(function (response) {
             switch(response.status) {
                case 201:
                    console.log("File uploaded successfully");
                    break;
                case 409:
                    console.log("File already exists");
                    break;
                default:
                    console.log("Code "+response.status);
             }
             fn();
           });
}

function deleteFile(fileId, fn) {
    unirest.delete(apiPath + '/2.0/files/' + fileId)
       .headers(createHeader())
       .end(function (response) {
            if(response.status === 204) {
                console.log("File deleted successfully.");
            }
            fn(response.status === 204);
       });
}



getOrCreateRaidFolder("vv", function(id) {
    if(id) {
        deleteFile(23162477342, function(argument) {
            // body...
        });
    } else {
        console.log("Unable to open raid folder.");
    }
});


function printFolderContent(folderId) {
    console.log("Printing content of folder "+folderId+":");
    getFolderContent(folderId, function (items) {
        if(items) {
            items.forEach(function(item) {
                    if(item.type === "folder") {
                    getFolderContent(item.id, function(entries) {
                        if(entries) {
                            console.log("folder: " + item.name + " (" + entries.length + " items, id = "+item.id+")");
                        } else {
                            console.log("Folder "+ item.id + " does not exist");
                        }
                    });
                } else {
                    console.log("file: "+item.name+ " (id = "+item.id+")")
                }
            });
        } else {
            console.log("Folder does not exist");
        }
    });
}